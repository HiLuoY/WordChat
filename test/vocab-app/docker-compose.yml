 services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_APP=app.py
      - MYSQL_HOST=mysql
      - MYSQL_USER=vocab_user
      - MYSQL_PASSWORD=vocab_password
      - MYSQL_DATABASE=vocab_db
      - REDIS_HOST=redis
    volumes:
      - ./backend:/app
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      db-init:
        condition: service_completed_successfully
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  db-init:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command:  python import_words.py
    environment:
      - MYSQL_HOST=mysql
      - MYSQL_USER=vocab_user
      - MYSQL_PASSWORD=vocab_password
      - MYSQL_DATABASE=vocab_db
    volumes:
      - ./backend:/app
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - app-network

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root_password
      - MYSQL_DATABASE=vocab_db
      - MYSQL_USER=vocab_user
      - MYSQL_PASSWORD=vocab_password
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
      - ./backend/database/init_db.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=caching_sha2_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
  mysql-data:
